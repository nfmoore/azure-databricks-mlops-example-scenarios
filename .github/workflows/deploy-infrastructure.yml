name: Deploy Azure Resources

on:
  workflow_dispatch:

env:
  AZ_CLI_VERSION: 2.59.0
  TEMPLATE_FILE: infrastructure/main.bicep
  DEPLOYMENT_LOCATION: ${{ vars.DEPLOYMENT_LOCATION }}
  DEPLOYMENT_RESOURCE_GROUP_NAME: ${{ vars.DEPLOYMENT_RESOURCE_GROUP_NAME }}
  DEPLOYMENT_DATARBICKS_MANAGED_RESOURCE_GROUP_NAME: ${{ vars.DEPLOYMENT_DATARBICKS_MANAGED_RESOURCE_GROUP_NAME }}
  GITHUB_RUN_ID: ${{ github.run_id }}

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Bicep Build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repo
        uses: actions/checkout@v4

      # Authenticate to Az CLI using OIDC
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Checks that all Bicep configuration files adhere to a canonical format
      - name: Bicep lint
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: az bicep build --file ${TEMPLATE_FILE}

      # Validate whether the template is valid at subscription scope
      - name: Bicep validate
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            az deployment sub validate \
              --name validate-${GITHUB_RUN_ID} \
              --template-file ${TEMPLATE_FILE} \
              --location ${DEPLOYMENT_LOCATION} \
              --parameters resourceGroupName=${DEPLOYMENT_RESOURCE_GROUP_NAME} \
              --parameters mrgDatabricksName=${DEPLOYMENT_DATARBICKS_MANAGED_RESOURCE_GROUP_NAME} \
              --parameters location=${DEPLOYMENT_LOCATION}

  deploy:
    name: Bicep Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repo
        uses: actions/checkout@v4

      # Authenticate to Az CLI using OIDC
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        # Deploy template to subscription
      - name: Bicep deploy
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            # Create artifacts directory
            mkdir artifacts

            # Deploy the Bicep template
            az deployment sub create \
              --name validate-${GITHUB_RUN_ID} \
              --template-file ${TEMPLATE_FILE} \
              --location ${DEPLOYMENT_LOCATION} \
              --parameters resourceGroupName=${DEPLOYMENT_RESOURCE_GROUP_NAME} \
              --parameters mrgDatabricksName=${DEPLOYMENT_DATARBICKS_MANAGED_RESOURCE_GROUP_NAME} \
              --parameters location=${DEPLOYMENT_LOCATION} \
              > artifacts/deployment-output.json

      # Upload output from deployment
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: artifacts

  databricks-setup-staging:
    name: Staging Databricks Setup
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repo
        uses: actions/checkout@v4

      # Download output from deployment
      - uses: actions/download-artifact@v4
        with:
          name: artifacts

      # Authenticate to Az CLI using OIDC
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup Databricks workspace
      - name: Setup Databricks workspace
        uses: ./.github/templates/setup-databricks
        with:
          bicep_output_variable_name: databricksStagingHostname

  databricks-setup-production:
    name: Production Databricks Setup
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout repo
        uses: actions/checkout@v4

      # Download output from deployment
      - uses: actions/download-artifact@v4
        with:
          name: artifacts

      # Authenticate to Az CLI using OIDC
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup Databricks workspace
      - name: Setup Databricks workspace
        uses: ./.github/templates/setup-databricks
        with:
          bicep_output_variable_name: databricksProductionHostname
